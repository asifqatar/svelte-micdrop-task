import { c as create_ssr_component, d as each, e as escape, v as validate_component, b as add_attribute } from "./ssr.js";
import { addDays, startOfWeek, format, getHours } from "date-fns";
import { B as Badge } from "./Badge.js";
import { t as truncateTitle } from "./utils.js";
import { B as Button } from "./Button.js";
import { A as AddMainBlue } from "./add-main-blue.js";
const css = {
  code: ".grid.svelte-1i5zchc.svelte-1i5zchc{width:100%}.day-header.svelte-1i5zchc.svelte-1i5zchc{font-size:14px;font-weight:normal}.time-header.svelte-1i5zchc.svelte-1i5zchc,.day-header.svelte-1i5zchc.svelte-1i5zchc{padding:12px;border-bottom:1px solid var(--stroke-primary, #d4d6d9);color:var(--text-primary, #0d1526)}.hour-cell.svelte-1i5zchc.svelte-1i5zchc{background-color:var(--bg-secondary, #ffffff);color:var(--text-tartiary, #666c79);font-size:14px;border-bottom:1px solid var(--Stroke-Primary, #d4d6d9)}.day-cell.svelte-1i5zchc.svelte-1i5zchc{font-size:14px;display:flex;flex-direction:column;align-items:center;gap:8px\n  }.event-badge.svelte-1i5zchc.svelte-1i5zchc{background-color:hsla(0, 0%, 100%, 1);color:hsla(220, 20%, 18%, 1);padding:2px 4px;border-radius:4px;font-weight:400}.image.svelte-1i5zchc.svelte-1i5zchc{border-radius:var(--rounded-sm, 2px);background:url(<path-to-image>) lightgray 50% / cover no-repeat;box-shadow:0px 20px 6px 0px rgba(0, 0, 0, 0),\n      0px 13px 5px 0px rgba(0, 0, 0, 0.02),\n      0px 7px 4px 0px rgba(0, 0, 0, 0.08),\n      0px 3px 3px 0px rgba(0, 0, 0, 0.14),\n      0px 1px 2px 0px rgba(0, 0, 0, 0.16)}.timeline.svelte-1i5zchc.svelte-1i5zchc{color:#666c79;font-size:8px;font-style:italic;font-weight:300;line-height:8px;letter-spacing:-0.4px;text-align:center}.embedCalendar.svelte-1i5zchc.svelte-1i5zchc{box-shadow:0px 56px 16px 0px rgba(43, 43, 43, 0),\n      0px 36px 14px 0px rgba(43, 43, 43, 0.01),\n      0px 20px 12px 0px rgba(43, 43, 43, 0.05),\n      0px 9px 9px 0px rgba(43, 43, 43, 0.09),\n      0px 2px 5px 0px rgba(43, 43, 43, 0.1)}.embedCalendar.svelte-1i5zchc .desc.svelte-1i5zchc{color:#0d1526;text-align:center;font-size:8px;font-style:normal;font-weight:500;line-height:10px;letter-spacing:-0.16px}@media(max-width: 1024px){.time-header.svelte-1i5zchc.svelte-1i5zchc,.day-header.svelte-1i5zchc.svelte-1i5zchc,.hour-cell.svelte-1i5zchc.svelte-1i5zchc,.day-cell.svelte-1i5zchc.svelte-1i5zchc{font-size:12px;padding:8px}}@media(max-width: 768px){.time-header.svelte-1i5zchc.svelte-1i5zchc,.day-header.svelte-1i5zchc.svelte-1i5zchc,.hour-cell.svelte-1i5zchc.svelte-1i5zchc,.day-cell.svelte-1i5zchc.svelte-1i5zchc{font-size:10px;padding:6px}}@media(max-width: 640px){.time-header.svelte-1i5zchc.svelte-1i5zchc,.day-header.svelte-1i5zchc.svelte-1i5zchc,.hour-cell.svelte-1i5zchc.svelte-1i5zchc,.day-cell.svelte-1i5zchc.svelte-1i5zchc{font-size:8px;padding:4px}.embedCalendar.svelte-1i5zchc.svelte-1i5zchc{box-shadow:none}}",
  map: '{"version":3,"file":"WeeklyView.svelte","sources":["WeeklyView.svelte"],"sourcesContent":["<script>\\n  import { addDays, startOfWeek, format, getHours } from \\"date-fns\\";\\n  import Badge from \\"../../Badges/Badge.svelte\\";\\n  import { truncateTitle } from \\"./../../../utils/utils\\";\\n  import Button from \\"./../../Button/Button.svelte\\";\\n  import AddMainBlue from \\"./../../../assets/svg/add-main-blue.svg\\";\\n\\n  export let isScheduledBtn = false;\\n  export let scheduleRecurring = false;\\n  export let eventCalendar = false;\\n  export let embedCalendar = false;\\n  export let currentevents = [];\\n\\n  $: console.log(currentevents, \\"logs currentevents\\");\\n\\n  export let selectedDate;\\n\\n  let weekDays = [];\\n  let loading = true;\\n\\n  $: weekDays = Array.from({ length: 7 }, (_, i) =>\\n    addDays(startOfWeek(selectedDate, { weekStartsOn: 1 }), i)\\n  );\\n\\n  function getEventsForDayAndHour(day, hour) {\\n    return currentevents.filter((event) => {\\n      const eventDate = new Date(event.date);\\n      return (\\n        eventDate.getUTCDate() === day.getUTCDate() &&\\n        eventDate.getUTCMonth() === day.getUTCMonth() &&\\n        eventDate.getUTCFullYear() === day.getUTCFullYear() &&\\n        getHours(new Date(event.date)) === hour\\n      );\\n    });\\n  }\\n\\n  function handleHover(hour) {\\n    console.log(hour, \\"logs hourss\\");\\n    hoveredDay = hour;\\n  }\\n\\n  function handleMouseLeave() {\\n    hoveredDay = null;\\n  }\\n<\/script>\\n\\n<div class=\\"overflow-hidden mx-auto w-full\\">\\n  <div\\n    class=\\"grid grid-cols-8 gap-0 text-center text-sm font-semibold border-t border-r border-l border-stroke-Primary rounded-t-lg\\"\\n  >\\n    <div class=\\"time-header\\"></div>\\n    {#each weekDays as day}\\n      <div>\\n        <div\\n          class=\\"day-header flex flex-col gap-2 border-l border-stroke-Primary uppercase\\"\\n        >\\n          <span class=\\"text-[#666C79] text-sm leading-[14px] font-normal\\">\\n            {format(day, \\"EEE\\")}\\n          </span>\\n          <span class=\\"text-[18px] text-[#0D1526] font-normal leading-[18px]\\">\\n            {format(day, \\"dd\\")}\\n          </span>\\n        </div>\\n      </div>\\n    {/each}\\n  </div>\\n  <div class=\\"grid grid-cols-8 gap-0 border-x border-stroke-Primary rounded-b-lg overflow-hidden\\">\\n    {#each Array(24)\\n      .fill()\\n      .map((_, i) => i) as hour}\\n      <div\\n        class=\\"hour-cell flex justify-center items-center pt-3 pb-3 text-center p-2\\"\\n      >\\n        {`${hour}:00`}\\n      </div>\\n      {#each weekDays as day}\\n        <div class=\\"day-cell group p-2 border-b border-l border-stroke-Primary\\">\\n          {#each getEventsForDayAndHour(day, hour) as event}\\n            <div class=\\"event-badge text-xs mb-1\\">\\n              {#if scheduleRecurring}\\n                <Badge\\n                  event=\\"squareEvent\\"\\n                  eventBgColor=\\"hsla(0, 0%, 100%, 1)\\"\\n                  eventTextColor=\\"hsla(220, 20%, 18%, 1)\\"\\n                  on:click={() => alert(\\"You clicked on an event!\\")}\\n                >\\n                  {event.name}\\n                </Badge>\\n              {:else if eventCalendar}\\n                <Badge\\n                  event=\\"circleEvent\\"\\n                  eventBgColor=\\"hsla(209, 99%, 50%, 0.15)\\"\\n                  eventTextColor=\\"hsla(209, 99%, 50%, 1)\\"\\n                  on:click={() => alert(\\"You clicked on an event!\\")}\\n                >\\n                  {truncateTitle(event.name, 13)}\\n                </Badge>\\n              {:else if embedCalendar}\\n              <!-- svelte-ignore a11y-click-events-have-key-events -->\\n              <!-- svelte-ignore a11y-no-static-element-interactions -->\\n              <div\\n                class=\\"w-full flex flex-col items-center gap-1.5 p-[5px] embedCalendar rounded\\"\\n                on:click={() => alert(\\"You clicked on an event!\\")}\\n              >\\n                <img\\n                  class=\\"image\\"\\n                  height=\\"46px\\"\\n                  src={event.image}\\n                  alt={event.name}\\n                />\\n                <div class=\\"timeline hidden sm:flex\\">{event.timeline}</div>\\n                <div class=\\"desc\\">{event.name}</div>\\n              </div>\\n              {/if}\\n            </div>\\n          {/each}\\n          {#if isScheduledBtn}\\n            <div class=\\" mt-auto mx-auto\\">\\n              <div class=\\"hidden group-hover:block\\">\\n                <Button ScheduledBtn beforeIcon={AddMainBlue}>Schedule</Button>\\n              </div>\\n            </div>\\n          {/if}\\n        </div>\\n      {/each}\\n    {/each}\\n  </div>\\n</div>\\n\\n<style>\\n  .grid {\\n    width: 100%;\\n  }\\n\\n  .day-header {\\n    font-size: 14px;\\n    font-weight: normal;\\n  }\\n\\n  .time-header,\\n  .day-header {\\n    padding: 12px;\\n    border-bottom: 1px solid var(--stroke-primary, #d4d6d9);\\n    color: var(--text-primary, #0d1526);\\n  }\\n\\n  .hour-cell {\\n    background-color: var(--bg-secondary, #ffffff);\\n    color: var(--text-tartiary, #666c79);\\n    font-size: 14px;\\n    border-bottom: 1px solid var(--Stroke-Primary, #d4d6d9);\\n  }\\n\\n  .day-cell {\\n    font-size: 14px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 8px\\n  }\\n\\n  .event-badge {\\n    background-color: hsla(0, 0%, 100%, 1);\\n    color: hsla(220, 20%, 18%, 1);\\n    padding: 2px 4px;\\n    border-radius: 4px;\\n    font-weight: 400;\\n  }\\n  .image {\\n    border-radius: var(--rounded-sm, 2px);\\n    background: url(<path-to-image>) lightgray 50% / cover no-repeat;\\n    box-shadow:\\n      0px 20px 6px 0px rgba(0, 0, 0, 0),\\n      0px 13px 5px 0px rgba(0, 0, 0, 0.02),\\n      0px 7px 4px 0px rgba(0, 0, 0, 0.08),\\n      0px 3px 3px 0px rgba(0, 0, 0, 0.14),\\n      0px 1px 2px 0px rgba(0, 0, 0, 0.16);\\n  }\\n  .timeline {\\n    color: #666c79;\\n    font-size: 8px;\\n    font-style: italic;\\n    font-weight: 300;\\n    line-height: 8px;\\n    letter-spacing: -0.4px;\\n    text-align: center;\\n  }\\n  .embedCalendar {\\n    box-shadow:\\n      0px 56px 16px 0px rgba(43, 43, 43, 0),\\n      0px 36px 14px 0px rgba(43, 43, 43, 0.01),\\n      0px 20px 12px 0px rgba(43, 43, 43, 0.05),\\n      0px 9px 9px 0px rgba(43, 43, 43, 0.09),\\n      0px 2px 5px 0px rgba(43, 43, 43, 0.1);\\n  }\\n  .embedCalendar .desc {\\n    color: #0d1526;\\n    text-align: center;\\n    font-size: 8px;\\n    font-style: normal;\\n    font-weight: 500;\\n    line-height: 10px;\\n    letter-spacing: -0.16px;\\n  }\\n\\n  @media (max-width: 1024px) {\\n    .time-header,\\n    .day-header,\\n    .hour-cell,\\n    .day-cell {\\n      font-size: 12px;\\n      padding: 8px;\\n    }\\n  }\\n\\n  @media (max-width: 768px) {\\n    .time-header,\\n    .day-header,\\n    .hour-cell,\\n    .day-cell {\\n      font-size: 10px;\\n      padding: 6px;\\n    }\\n  }\\n\\n  @media (max-width: 640px) {\\n    .time-header,\\n    .day-header,\\n    .hour-cell,\\n    .day-cell {\\n      font-size: 8px;\\n      padding: 4px;\\n    }\\n    .embedCalendar{\\n      box-shadow: none;\\n    }\\n  }\\n</style>\\n"],"names":[],"mappings":"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"}'
};
const WeeklyView = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { isScheduledBtn = false } = $$props;
  let { scheduleRecurring = false } = $$props;
  let { eventCalendar = false } = $$props;
  let { embedCalendar = false } = $$props;
  let { currentevents = [] } = $$props;
  let { selectedDate } = $$props;
  let weekDays = [];
  function getEventsForDayAndHour(day, hour) {
    return currentevents.filter((event) => {
      const eventDate = new Date(event.date);
      return eventDate.getUTCDate() === day.getUTCDate() && eventDate.getUTCMonth() === day.getUTCMonth() && eventDate.getUTCFullYear() === day.getUTCFullYear() && getHours(new Date(event.date)) === hour;
    });
  }
  if ($$props.isScheduledBtn === void 0 && $$bindings.isScheduledBtn && isScheduledBtn !== void 0) $$bindings.isScheduledBtn(isScheduledBtn);
  if ($$props.scheduleRecurring === void 0 && $$bindings.scheduleRecurring && scheduleRecurring !== void 0) $$bindings.scheduleRecurring(scheduleRecurring);
  if ($$props.eventCalendar === void 0 && $$bindings.eventCalendar && eventCalendar !== void 0) $$bindings.eventCalendar(eventCalendar);
  if ($$props.embedCalendar === void 0 && $$bindings.embedCalendar && embedCalendar !== void 0) $$bindings.embedCalendar(embedCalendar);
  if ($$props.currentevents === void 0 && $$bindings.currentevents && currentevents !== void 0) $$bindings.currentevents(currentevents);
  if ($$props.selectedDate === void 0 && $$bindings.selectedDate && selectedDate !== void 0) $$bindings.selectedDate(selectedDate);
  $$result.css.add(css);
  {
    console.log(currentevents, "logs currentevents");
  }
  weekDays = Array.from({ length: 7 }, (_, i) => addDays(startOfWeek(selectedDate, { weekStartsOn: 1 }), i));
  return `<div class="overflow-hidden mx-auto w-full"><div class="grid grid-cols-8 gap-0 text-center text-sm font-semibold border-t border-r border-l border-stroke-Primary rounded-t-lg svelte-1i5zchc"><div class="time-header svelte-1i5zchc"></div> ${each(weekDays, (day) => {
    return `<div><div class="day-header flex flex-col gap-2 border-l border-stroke-Primary uppercase svelte-1i5zchc"><span class="text-[#666C79] text-sm leading-[14px] font-normal">${escape(format(day, "EEE"))}</span> <span class="text-[18px] text-[#0D1526] font-normal leading-[18px]">${escape(format(day, "dd"))} </span></div> </div>`;
  })}</div> <div class="grid grid-cols-8 gap-0 border-x border-stroke-Primary rounded-b-lg overflow-hidden svelte-1i5zchc">${each(Array(24).fill().map((_, i) => i), (hour) => {
    return `<div class="hour-cell flex justify-center items-center pt-3 pb-3 text-center p-2 svelte-1i5zchc">${escape(`${hour}:00`)}</div> ${each(weekDays, (day) => {
      return `<div class="day-cell group p-2 border-b border-l border-stroke-Primary svelte-1i5zchc">${each(getEventsForDayAndHour(day, hour), (event) => {
        return `<div class="event-badge text-xs mb-1 svelte-1i5zchc">${scheduleRecurring ? `${validate_component(Badge, "Badge").$$render(
          $$result,
          {
            event: "squareEvent",
            eventBgColor: "hsla(0, 0%, 100%, 1)",
            eventTextColor: "hsla(220, 20%, 18%, 1)"
          },
          {},
          {
            default: () => {
              return `${escape(event.name)} `;
            }
          }
        )}` : `${eventCalendar ? `${validate_component(Badge, "Badge").$$render(
          $$result,
          {
            event: "circleEvent",
            eventBgColor: "hsla(209, 99%, 50%, 0.15)",
            eventTextColor: "hsla(209, 99%, 50%, 1)"
          },
          {},
          {
            default: () => {
              return `${escape(truncateTitle(event.name, 13))} `;
            }
          }
        )}` : `${embedCalendar ? `  <div class="w-full flex flex-col items-center gap-1.5 p-[5px] embedCalendar rounded svelte-1i5zchc"><img class="image svelte-1i5zchc" height="46px"${add_attribute("src", event.image, 0)}${add_attribute("alt", event.name, 0)}> <div class="timeline hidden sm:flex svelte-1i5zchc">${escape(event.timeline)}</div> <div class="desc svelte-1i5zchc">${escape(event.name)}</div> </div>` : ``}`}`} </div>`;
      })} ${isScheduledBtn ? `<div class="mt-auto mx-auto"><div class="hidden group-hover:block">${validate_component(Button, "Button").$$render(
        $$result,
        {
          ScheduledBtn: true,
          beforeIcon: AddMainBlue
        },
        {},
        {
          default: () => {
            return `Schedule`;
          }
        }
      )}</div> </div>` : ``} </div>`;
    })}`;
  })}</div> </div>`;
});
export {
  WeeklyView as W
};
